{
  "name": "Telegram AI Recruiter Auto-Responder: Create Draft Replies to incoming telegram messages",
  "nodes": [
    {
      "parameters": {
        "jsonSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"needsReply\": {\n      \"type\": \"boolean\"\n      },\n    \"question\": {\n      \"type\": \"string\",\n      \"description\":\"The next question if the last question is not asked. Remove the options in this question.\"\n      },\n    \"lastQuestionAsked\": {\n      \"type\": \"boolean\",\n      \"description\":\"Is the related question equal to the last question\"\n      },\n    \"notRelated\": {\n      \"type\": \"boolean\",\n      \"description\":\"If the input is not related to the proces\"\n      },\n    \"relatedQuestion\": {\n      \"type\": \"number\",\n      \"description\":\"The input is related to this question\"\n      },\n    \"option1\": {\n      \"type\": \"string\",\n      \"description\":\"The first option that belongs to the question. If that is not present. Skip it\"\n      },\n    \"option2\": {\n      \"type\": \"string\",\n      \"description\":\"The second option that belongs to the question. If that is not present. Skip it\"\n      }\n  },\n  \"required\": [\"needsReply\", \"question\", \"answer\"]\n}\n"
      },
      "id": "bb2e91a2-c341-4ce0-bbdc-2aad6c40a5e4",
      "name": "JSON Parser",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "position": [
        640,
        500
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {
          "responseFormat": "json_object",
          "temperature": 0.9
        }
      },
      "id": "5962661b-439e-455e-8d4f-57998d6c40ea",
      "name": "OpenAI Chat",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        460,
        500
      ],
      "typeVersion": 1,
      "credentials": {
        "openAiApi": {
          "id": "0oq9f8nbeR1HPEoC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "## When I receive an message from a candidate\n",
        "height": 394.42512272977456,
        "width": 304.10628068244364
      },
      "id": "55f7d2c7-2ec0-486e-a63d-27d17762218a",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        120,
        240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## ... that Needs a Reply in the form of a question or a thank you message\n",
        "height": 397,
        "width": 736
      },
      "id": "caa44582-0596-4b4e-ae75-5cce6e873c21",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        440,
        240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Generate a  next Question",
        "height": 400,
        "width": 333,
        "color": 4
      },
      "id": "63144b70-e711-46fc-9fd4-64358337e4fd",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1280,
        240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## ...sent to the candidate",
        "height": 395,
        "width": 326,
        "color": 4
      },
      "id": "bc4ff5df-2843-4b49-8535-2d8aa515f981",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1640,
        240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "model": "gpt-4-turbo",
        "options": {
          "temperature": 0
        }
      },
      "id": "160d17e5-935b-4373-9c33-a986f3875095",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        1320,
        460
      ],
      "typeVersion": 1,
      "credentials": {
        "openAiApi": {
          "id": "0oq9f8nbeR1HPEoC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "prompt": "=Subject: Aanvraag\nMessage:\n{{ $json.callback_query.data }}",
        "messages": {
          "messageValues": [
            {
              "message": "Als recruiter assistent binnen ons team is jouw taak om potentiÃ«le kandidaten te begeleiden door het sollicitatieproces. Je stelt gerichte vragen om hun geschiktheid en beschikbaarheid te beoordelen en biedt tegelijkertijd ondersteuning door hun vragen te beantwoorden. Jouw rol is cruciaal in het stroomlijnen van het communicatieproces en het waarborgen van een soepele ervaring voor de kandidaten.\n\nVragen die gesteld moeten worden met de opties voor de antwoorden:\n1.\tVraag aan de kandidaat of de aanvraag hem/haar aanspreekt? (De aanvraag spreekt mij aan/ De aanvraag spreekt mij niet aan)\n2.\tVraag de kandidaat of hij/zij beschikbaar is voor die periode en de gewenste uren zoals ze in de aanvraag staan vermeld? (Ik ben beschikbaar/ Ik ben niet beschikbaar)\n3.\tVraag de kandidaat  of hij/zij voldoet aan de eisen en groot gedeelte van de wensen zoals ze in de aanvraag staan vermeld?  (Ik voldoe aan de eisen en wensen/ Ik voldoe niet aan de eisen en wensen)\n4.\tVraag de kandidaat of hij/zij een motivatie kan opsturen?  (Ik stuur een motivatie op/ Ik stuur geen motivatie op)\n5.\tVraag de kandidaat of hij/zij een CV max A4 kan opsturen? (Ik stuur een CV op/ Ik stuur geen CV op)\n\nDoelstellingen:\nBekijk de invoer vanuit de kandidaat en bepaal op welke vraag dit een antwoord kan zijn. Als dat niet bepaald kan worden en het niet relateerbaar is aan de vragen. Geef dan aan dat je alleen kan reageren op onderdelen zoals vermeld in de aanvraag.\nVerzamel de benodigde informatie van kandidaat door een telkens 1 vraag te stellen.\nStel na elk antwoord van de kandidaat de volgende vraag die na de beantwoorde vraag moet komen.\nAls er bijvoorbeeld antwoord gegeven is op vraag 1. Stel dan vraag 2. Als er antwoord gegeven is op vraag 4. Stel dan vraag 5.\nNadat vraag 5 beantwoord is moet je de kandidaat vertellen dat je contact zal opnemen.\nStuur een bedankbericht na het ontvangen van het antwoord op vraag 5.\nBepaal ook of de laatste vraag al gesteld is.\nAls de gerelateerde vraag gelijk is 5 kan de volgende vraag niet gelijk zijn aan vraag 1,2,3,4 of 5.\n\nBijvoorbeeld:\nJe hebt het volgende bericht ontvangen. Hi ik heb mijn CV verstuurd. Omdat dit antwoord bij vraag 5 hoort dus ook een gerelateerd aan vraag 5. Zijn alle vragen al beantwoord.  \nVerwerk het nummer van de vraag in elk bericht om de voortgang te volgen.\n\nAls de kandidaat geen CV of motivatiebrief kan aanleveren dan moet je een  bedankbericht sturen, zoals: Aangezien je geen CV kunt aanleveren, kunnen we helaas niet verder gaan met het sollicitatieproces\n\nCommunicatierichtlijnen:\nHoud de communicatie beknopt en in een zakelijke informele toon.\nBegin elk bericht met \"Hallo\" en eindig met \"Met vriendelijke Groeten, De recruiter.\"\nGebruik alleen platte tekst, zonder speciale opmaak.\nAntwoord altijd in dezelfde taal als de inkomende e-mail.\n\nAutonomie:\nWerk autonoom volgens je specialiteit."
            }
          ]
        }
      },
      "id": "b7b03f8f-d9c2-4adb-a2cc-b918b5728c52",
      "name": "Assess if message needs a reply",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "position": [
        480,
        340
      ],
      "typeVersion": 1.3
    },
    {
      "parameters": {
        "content": "## ...sent to the candidate",
        "height": 395,
        "width": 326,
        "color": 3
      },
      "id": "010ec735-7010-4d45-9370-5206296a68bb",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1640,
        660
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.text }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "={{ $('Assess if message needs a reply').item.json.option1 || 'OK' }}",
                    "additionalFields": {
                      "callback_data": "={{ $('If Needs Success Reply').item.json.option1 || 'OK' }}"
                    }
                  },
                  {
                    "text": "={{ $('Assess if message needs a reply').item.json.option2 || 'OK' }}",
                    "additionalFields": {
                      "callback_data": "={{ $('Assess if message needs a reply').item.json.option2 || 'OK' }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "reply_to_message_id": "={{ $('Telegram Trigger').item.json.callback_query.message.message_id }}"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1940,
        320
      ],
      "id": "b874b64e-121c-477e-a547-c1465878fe68",
      "name": "Telegram",
      "webhookId": "1bee34bf-fece-48f3-813c-089f5f514cf3",
      "notesInFlow": false,
      "credentials": {
        "telegramApi": {
          "id": "30kGuK30FJR2KbPG",
          "name": "Recruiter AI Telegram Account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.callback_query.message.chat.id }}",
        "text": "={{ $json.text }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1740,
        800
      ],
      "id": "ba994ee7-cfb6-4d1a-82a9-68c75170288c",
      "name": "Telegram1",
      "webhookId": "44689bef-c19c-49ec-9e1c-23276167de3d",
      "credentials": {
        "telegramApi": {
          "id": "30kGuK30FJR2KbPG",
          "name": "Recruiter AI Telegram Account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Generate a Error Reply",
        "height": 400,
        "width": 333,
        "color": 3
      },
      "id": "232836b6-3606-4271-b311-bc9856983956",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1280,
        660
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Subject: De Aanvraag\nMessage: Kandidaat heeft geen interesse.",
        "messages": {
          "messageValues": [
            {
              "message": "=Als recruiter assistent binnen ons team is jouw taak om potentiÃ«le kandidaten te begeleiden door het sollicitatieproces. Jouw rol is cruciaal in het stroomlijnen van het communicatieproces en het waarborgen van een soepele ervaring voor de kandidaten. Bedankt de kandidaat en geef aan dat je op zoek gaat naar andere aanvragen die misschien wel interessant kunnen zijn.\n\nNaam van de kandidaat:\n{{ $('Telegram Trigger').item.json.message.from.first_name }} {{ $('Telegram Trigger').item.json.message.from.last_name }}\n\nNaam van de recruiter:\nSome Recruiter\n\nNaam van het bedrijf:\nHR4Professionals\n\nContactgegevens:\nHR4Professionals\nRecruiterstraat 29\n2563BV Haardorp\nNederland"
            }
          ]
        }
      },
      "id": "3b449944-3ac9-4d89-b3e1-86090ad190d9",
      "name": "Generate error message",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "position": [
        1320,
        800
      ],
      "typeVersion": 1.4
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Context:\nQuestion = {{ $json.question }}\nneedsReply = {{ $('Assess if message needs a reply').item.json.needsReply }}\nlastQuestionAsked = {{ $json.lastQuestionAsked }}\nnotRelated = {{ $json.notRelated }}\nrelatedQuestion = {{ $json.relatedQuestion }}\noption1 = {{ $('Assess if message needs a reply').item.json.option1 }}\noption2 = {{ $('Assess if message needs a reply').item.json.option2 }}",
        "messages": {
          "messageValues": [
            {
              "message": "=Als recruiter assistent binnen ons team is jouw taak om potentiÃ«le kandidaten te begeleiden door het sollicitatieproces. Jouw rol is cruciaal in het stroomlijnen van het communicatieproces en het waarborgen van een soepele ervaring voor de kandidaten. \nAls needsReply is true en de question is niet leeg en de relatedQuestion is ongelijk aan 5:\nStel de vraag aan de kandidaat als deze aanwezig is in de question parameter:  {{ $json.question }}. \n\nAls de relatedQuestion gelijk is aan 5 en de needsReply is \"true\" en de notRelated is \"false\":\nGeef aan dat het proces afgerond is. Bedankt de kandidaat en geef aan dat je snel contact zal opnemen.\n\nGebruik de context.\n\nAls notRelated gelijk aan true is:\nBedankt de kandidaat en geef aan dat je alleen kan reageren op zaken die betrekking hebben op een aanvraag.\nProbeer nooit zelf een vraag te beanwoorden.\n\nNaam van de kandidaat:\n{{ $('Telegram Trigger').item.json.message.from.first_name }} {{ $('Telegram Trigger').item.json.message.from.last_name }}\n\nNaam van de recruiter:\nSome Recruiter\n\nNaam van het bedrijf:\nHR4Professionals\n\nContactgegevens:\nHR4Professionals\nRecruiterstraat 29\n2563BV Haardorp\nNederland"
            }
          ]
        }
      },
      "id": "5bbf38d2-edcd-46e3-8ee4-1a3d9c799260",
      "name": "Generate message reply",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "position": [
        1340,
        320
      ],
      "typeVersion": 1.4
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1340,
        920
      ],
      "id": "a06ec512-62ae-41be-ad5a-a7e16f465b3c",
      "name": "OpenAI Chat Model Error",
      "credentials": {
        "openAiApi": {
          "id": "0oq9f8nbeR1HPEoC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "53849246-ad32-4845-9976-9f9688f5a6f2",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              },
              "leftValue": "={{ $json.needsReply || $json.lastQuestionAsked || $json.relatedQuestion === 5 }}",
              "rightValue": "true"
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f3d95552-5240-4ec4-969c-4026920652dd",
      "name": "If Needs Success Reply",
      "type": "n8n-nodes-base.if",
      "position": [
        780,
        340
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "url": "https://app.loxo.co/api/hr4professionals/jobs",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "query",
              "value": "={{ $json.query.job}}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "authorization",
              "value": "5ac31a5e4eb2ae3c720227c2ac08cf1045c3c5ba5b2489dad01c777875e8a787fbb3b6f0a746a7bbeb26462435c9df114c2d655c016ec69931990d729c451edd532649ddcb50e7a5a6fbbcf451b4bcba8ac9e5dd684cb1a45ddc4f16f40d49f15cf3b0b813118555b7a23f45fe8a97f2448e4eb6b61050942e3a722e63cb98ea"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        360,
        1240
      ],
      "id": "6e837d9f-7523-4bc2-a98a-301be416378d",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "content": "## When I receive an message from a candidate\n",
        "height": 394.42512272977456,
        "width": 304.10628068244364
      },
      "id": "d8994fdd-8f4a-407d-acf3-71e26becdfb3",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        280,
        1100
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## When I receive an message from a candidate\n",
        "height": 394,
        "width": 684
      },
      "id": "5d6fd4c8-540c-452b-855e-66b9a8792d40",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1280,
        1100
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1680,
        1200
      ],
      "id": "d88d84a2-5784-4458-84f5-91be724366d8",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "path": "080dea51-6db5-4d9f-9607-a2190f88a066",
        "authentication": "basicAuth",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -20,
        1240
      ],
      "id": "693419b8-31ec-461b-a37a-dd79ebf45687",
      "name": "Webhook",
      "webhookId": "080dea51-6db5-4d9f-9607-a2190f88a066",
      "credentials": {
        "httpBasicAuth": {
          "id": "UJjV7AkswpW12HYY",
          "name": "Recruiter webhook"
        }
      }
    },
    {
      "parameters": {
        "content": "## When I receive an message from a candidate\n",
        "height": 394,
        "width": 584
      },
      "id": "e96a947b-3e8f-463b-b9c6-e08f629c385b",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        640,
        1100
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        800,
        1380
      ],
      "id": "09f3f554-a317-49e4-a437-f678abc3a0d4",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "0oq9f8nbeR1HPEoC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an agent who always response with the JSON response:\n\nJSON:\n{{ JSON.stringify($json.results) }}",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        780,
        1200
      ],
      "id": "a3641e51-7ee6-45b5-9ed4-06102290847a",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "content": "## When I receive an message from a candidate\n",
        "height": 394.42512272977456,
        "width": 304.10628068244364
      },
      "id": "c102058e-1557-47f5-9f0c-c3f5650bf23f",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -60,
        1100
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "updates": [
          "callback_query",
          "channel_post",
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [
        200,
        380
      ],
      "id": "d679e66a-5a1e-4613-93f4-475552d5f7ff",
      "name": "Telegram Trigger",
      "webhookId": "5f029d86-2fa6-4847-b09b-875088542c23",
      "credentials": {
        "telegramApi": {
          "id": "30kGuK30FJR2KbPG",
          "name": "Recruiter AI Telegram Account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Generate an end Reply",
        "height": 400,
        "width": 333,
        "color": 4
      },
      "id": "34107c1f-c4c8-4b90-9bf5-48c0b26c7cb4",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1280,
        -180
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## ...sent to the candidate",
        "height": 395,
        "width": 326,
        "color": 4
      },
      "id": "31e7c5f9-8bc2-4114-a8b1-d4ab72a524af",
      "name": "Sticky Note11",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1640,
        -180
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Context:\nQuestion = {{ $json.question }}\nneedsReply = {{ $('Assess if message needs a reply').item.json.needsReply }}\nlastQuestionAsked = {{ $json.lastQuestionAsked }}\nnotRelated = {{ $json.notRelated }}\nrelatedQuestion = {{ $json.relatedQuestion }}\noption1 = {{ $('Assess if message needs a reply').item.json.option1 }}\noption2 = {{ $('Assess if message needs a reply').item.json.option2 }}",
        "messages": {
          "messageValues": [
            {
              "message": "=Als recruiter assistent binnen ons team is jouw taak om potentiÃ«le kandidaten te begeleiden door het sollicitatieproces. Jouw rol is cruciaal in het stroomlijnen van het communicatieproces en het waarborgen van een soepele ervaring voor de kandidaten. \nAls needsReply is true en de question is niet leeg en de relatedQuestion is ongelijk aan 5:\nStel de vraag aan de kandidaat als deze aanwezig is in de question parameter:  {{ $json.question }}. \n\nAls de relatedQuestion gelijk is aan 5 en de needsReply is \"true\" en de notRelated is \"false\":\nGeef aan dat het proces afgerond is. Bedankt de kandidaat en geef aan dat je snel contact zal opnemen.\n\nGebruik de context.\n\nAls notRelated gelijk aan true is:\nBedankt de kandidaat en geef aan dat je alleen kan reageren op zaken die betrekking hebben op een aanvraag.\nProbeer nooit zelf een vraag te beanwoorden.\n\nNaam van de kandidaat:\n{{ $('Telegram Trigger').item.json.message.from.first_name }} {{ $('Telegram Trigger').item.json.message.from.last_name }}\n\nNaam van de recruiter:\nSome Recruiter\n\nNaam van het bedrijf:\nHR4Professionals\n\nContactgegevens:\nHR4Professionals\nRecruiterstraat 29\n2563BV Haardorp\nNederland"
            }
          ]
        }
      },
      "id": "8d37a127-edc3-456e-ab1c-9369927a78e0",
      "name": "Generate message reply1",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "position": [
        1340,
        -40
      ],
      "typeVersion": 1.4
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.callback_query.message.chat.id }}",
        "text": "={{ $json.text }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1740,
        -40
      ],
      "id": "dbffa852-cb44-4638-9153-0b8891d5117a",
      "name": "Telegram End",
      "webhookId": "1bee34bf-fece-48f3-813c-089f5f514cf3",
      "notesInFlow": false,
      "credentials": {
        "telegramApi": {
          "id": "30kGuK30FJR2KbPG",
          "name": "Recruiter AI Telegram Account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "5716947f-6b97-4795-8124-9f07297ac0ae",
              "leftValue": "={{ $json.option1 }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "ab7146c1-a56d-45c1-a304-eed840056f24",
              "leftValue": "={{ $json.option2 }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "5a770bd8-7d58-4685-b000-1bfa68d71e9c",
      "name": "If Success Reply With Options",
      "type": "n8n-nodes-base.if",
      "position": [
        980,
        300
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1360,
        120
      ],
      "id": "e988256b-cef5-4b84-8ef6-70e01bea4f80",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "0oq9f8nbeR1HPEoC",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "5716947f-6b97-4795-8124-9f07297ac0ae",
              "leftValue": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a7fb5b9b-5ef4-4c7d-9dbf-f94236ee4f5d",
      "name": "If Success Reply With Options1",
      "type": "n8n-nodes-base.if",
      "position": [
        1700,
        420
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.callback_query.message.chat.id }}",
        "text": "={{ $json.text }}",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "={{ $('Assess if message needs a reply').item.json.option1 || 'OK' }}",
                    "additionalFields": {
                      "callback_data": "={{ $('If Needs Success Reply').item.json.option1 || 'OK' }}"
                    }
                  },
                  {
                    "text": "={{ $('Assess if message needs a reply').item.json.option2 || 'OK' }}",
                    "additionalFields": {
                      "callback_data": "={{ $('Assess if message needs a reply').item.json.option2 || 'OK' }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "reply_to_message_id": "={{ $('Telegram Trigger').item.json.callback_query.message.message_id }}"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1940,
        460
      ],
      "id": "02bc2faf-0402-4da8-8913-ca0d5dda6f83",
      "name": "Telegram2",
      "webhookId": "1bee34bf-fece-48f3-813c-089f5f514cf3",
      "notesInFlow": false,
      "credentials": {
        "telegramApi": {
          "id": "30kGuK30FJR2KbPG",
          "name": "Recruiter AI Telegram Account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "JSON Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Assess if message needs a reply",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat": {
      "ai_languageModel": [
        [
          {
            "node": "Assess if message needs a reply",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Generate message reply",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Assess if message needs a reply": {
      "main": [
        [
          {
            "node": "If Needs Success Reply",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate error message": {
      "main": [
        [
          {
            "node": "Telegram1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate message reply": {
      "main": [
        [
          {
            "node": "If Success Reply With Options1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model Error": {
      "ai_languageModel": [
        [
          {
            "node": "Generate error message",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "If Needs Success Reply": {
      "main": [
        [
          {
            "node": "If Success Reply With Options",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Generate error message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram": {
      "main": [
        []
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Assess if message needs a reply",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate message reply1": {
      "main": [
        [
          {
            "node": "Telegram End",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Success Reply With Options": {
      "main": [
        [
          {
            "node": "Generate message reply",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Generate message reply1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Generate message reply1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "If Success Reply With Options1": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {},
  "versionId": "1fbc04fd-0513-4e0a-907d-f7419b5ba1d6",
  "meta": {
    "templateId": "2271",
    "templateCredsSetupCompleted": true,
    "instanceId": "57d2f18e1f410a2e5e28fdaeeb5f59875a002a289f1e505ffd3e8be762215818"
  },
  "id": "MMKx0FuDMeZSEqvx",
  "tags": [
    {
      "createdAt": "2025-03-08T07:05:49.728Z",
      "updatedAt": "2025-03-08T07:05:49.728Z",
      "id": "Ppwa5pg1iMZ61wOR",
      "name": "Recruiter"
    },
    {
      "createdAt": "2025-03-08T07:06:36.454Z",
      "updatedAt": "2025-03-08T07:06:36.454Z",
      "id": "b1AYNGnt3kcpf85a",
      "name": "HR4Professionals"
    }
  ]
}